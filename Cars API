from bs4 import BeautifulSoup
import requests
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import urllib.request
import csv
import html5lib
import sklearn
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
import statsmodels.api as sm
from sklearn import linear_model
from sklearn import metrics

url="https://gist.github.com/noamross/e5d3e859aa0c794be10b#file-cars-csv"
dfs = pd.read_html(url)
df = pd.concat(dfs)
data=df
data

Cars=data.rename(columns={"Unnamed: 1":"Cars"})
Cars=Cars.drop([Cars.index[32] , Cars.index[33]])
Cars.drop(Cars.columns[[0, 1]], axis = 1, inplace = True) 
corr = Cars.corr()
corr.sort_values(["mpg"], ascending = False, inplace = True)#
print(corr.mpg)
train = pd.get_dummies(data=Cars)
y=train["mpg"]
X = train.drop(["mpg"], axis=1)
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size = .20, random_state = 0)
X_train.shape, y_train.shape, X_test.shape, y_test.shape


# Note the difference in argument order
model = sm.OLS(y, X).fit()
predictions = model.predict(X) # make the predictions by the model

# Print out the statistics
model.summary()


lm = linear_model.LinearRegression()
model = lm.fit(X,y)
predictions = lm.predict(X)
print(predictions)
lm.score(X,y)
lm.coef_
lm.intercept_


#MAE
print(metrics.mean_absolute_error(y_test,y_pred))
#MSE
print(metrics.mean_squared_error(y_test,y_pred))
#RMSE
print(np.sqrt(metrics.mean_squared_error(y_test,y_pred)))
